{"version":3,"sources":["../../../AppData/Roaming/npm/node_modules/pixify/node_modules/browser-pack/_prelude.js","src/core/core.js","src/helpers/array.js","src/world/chunk.js","src/world/world.js","src/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pixometric","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_world","Pixometric","stage","world","_classCallCheck","generate","size","array","fill","_array","ArrayHelpers","Chunk","voxels","_chunk","World","width","height","_core","_core2","default","_world2"],"mappings":";;;;;;;CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,WAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,8JCAA,IAAA0B,GAAAR,EAAA,kBAEqBS,mCACjB,QAAAA,GAAYC,EAAOC,GAAOC,EAAAtB,KAAAmB,GACtBnB,KAAKoB,MAAQA,EACbpB,KAAKqB,MAAQA,cAHAF,wDCDd,SAASI,GAASC,IACpBC,UAAYT,OAASQ,EACtBC,MAAMC,KAAK,sDAFCH,SAAAA,qLCDhB,IAAAI,GAAAjB,EAAA,oBAAYkB,6JAGSC,EACjB,QAAAA,KAAcP,EAAAtB,KAAA6B,GAEV7B,KAAK8B,OAASF,EAAaL,SAAS,iBAHvBM,yMCHrB,IAAAE,GAAArB,EAAA,WAGqBsB,mCACjB,QAAAA,GAAYC,EAAOC,GAAQZ,EAAAtB,KAAAgC,GACvBhC,KAAKiC,MAAQA,EACjBjC,KAAKkC,OAASA,cAHGF,kHCHrB,GAAAG,GAAAzB,EAAA,sBACAQ,EAAAR,EAAA,uBAEA0B,GAAAC,QAAWL,MAAXM,EAAAD,QAEAvC,EAAOqB,WAAPiB,EAAAC","file":"pixometric.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import World from \"../world/world\";\r\n\r\nexport default class Pixometric {\r\n    constructor(stage, world) {\r\n        this.stage = stage;\r\n        this.world = world;\r\n    }\r\n}","// Optimalized filling method\r\nexport function generate(size) {\r\n    (array = []).length = size;\r\n    array.fill(0);\r\n}","import * as ArrayHelpers from \"../helpers/array\";\r\n\r\n// TODO: Add possibility to change Chunk dimenstions\r\nexport default class Chunk {\r\n    constructor() {\r\n        // 16x16x16\r\n        this.voxels = ArrayHelpers.generate(4096);\r\n    }\r\n}","import Chunk from \"./chunk\";\r\n\r\n// TODO: Make it infinity\r\nexport default class World {\r\n    constructor(width, height) {\r\n        this.width = width;\r\n    this.height = height;\r\n    }\r\n} ","import Pixometric from \"./core/core\";\r\nimport World from \"./world/world\";\r\n\r\nPixometric.World = World;\r\n\r\nglobal.Pixometric = Pixometric;"],"sourceRoot":"."}